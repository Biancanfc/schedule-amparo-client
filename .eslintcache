[{"/app/src/index.js":"1","/app/src/config/yup.js":"2","/app/src/App/app.js":"3","/app/src/utils/index.js":"4","/app/src/routes/history.js":"5","/app/src/routes/index.js":"6","/app/src/context/index.js":"7","/app/src/utils/validators/cpf.js":"8","/app/src/routes/route.js":"9","/app/src/layouts/default.js":"10","/app/src/pages/Activity/index.js":"11","/app/src/pages/Activity/style.js":"12","/app/src/services/api.js":"13","/app/src/components/Table/index.js":"14","/app/src/components/Navbar/index.js":"15","/app/src/components/Snackbar/index.js":"16","/app/src/components/Filters/index.js":"17","/app/src/components/UI/Text/index.js":"18","/app/src/components/UI/Button/index.js":"19","/app/src/components/Modals/NewActivity/index.js":"20","/app/src/components/Modals/NewPatient/index.js":"21","/app/src/components/Modals/index.js":"22","/app/src/components/UI/Button/style.js":"23","/app/src/components/Modals/style.js":"24","/app/src/components/UI/TextField/index.js":"25","/app/src/components/UI/Select/index.js":"26","/app/src/components/UI/Text/style.js":"27","/app/src/components/Filters/style.js":"28","/app/src/components/Navbar/style.js":"29","/app/src/components/Table/style.js":"30","/app/src/components/UI/TextField/style.js":"31","/app/src/components/UI/Select/style.js":"32"},{"size":217,"mtime":1611612254440,"results":"33","hashOfConfig":"34"},{"size":218,"mtime":1611612254436,"results":"35","hashOfConfig":"34"},{"size":743,"mtime":1611612254436,"results":"36","hashOfConfig":"34"},{"size":243,"mtime":1611612254440,"results":"37","hashOfConfig":"34"},{"size":114,"mtime":1611612254440,"results":"38","hashOfConfig":"34"},{"size":577,"mtime":1611612254440,"results":"39","hashOfConfig":"34"},{"size":754,"mtime":1611612254436,"results":"40","hashOfConfig":"34"},{"size":997,"mtime":1611612254440,"results":"41","hashOfConfig":"34"},{"size":494,"mtime":1611612254440,"results":"42","hashOfConfig":"34"},{"size":707,"mtime":1611612254440,"results":"43","hashOfConfig":"34"},{"size":4409,"mtime":1611632978230,"results":"44","hashOfConfig":"34"},{"size":321,"mtime":1611612254440,"results":"45","hashOfConfig":"34"},{"size":152,"mtime":1611612254440,"results":"46","hashOfConfig":"34"},{"size":1991,"mtime":1611612254436,"results":"47","hashOfConfig":"34"},{"size":938,"mtime":1611612254436,"results":"48","hashOfConfig":"34"},{"size":406,"mtime":1611612254436,"results":"49","hashOfConfig":"34"},{"size":3980,"mtime":1611612254436,"results":"50","hashOfConfig":"34"},{"size":180,"mtime":1611612254436,"results":"51","hashOfConfig":"34"},{"size":293,"mtime":1611612254436,"results":"52","hashOfConfig":"34"},{"size":4908,"mtime":1611634053169,"results":"53","hashOfConfig":"34"},{"size":2718,"mtime":1611612254436,"results":"54","hashOfConfig":"34"},{"size":728,"mtime":1611612254436,"results":"55","hashOfConfig":"34"},{"size":250,"mtime":1611612254436,"results":"56","hashOfConfig":"34"},{"size":218,"mtime":1611612254436,"results":"57","hashOfConfig":"34"},{"size":308,"mtime":1611612254436,"results":"58","hashOfConfig":"34"},{"size":928,"mtime":1611612254436,"results":"59","hashOfConfig":"34"},{"size":252,"mtime":1611612254436,"results":"60","hashOfConfig":"34"},{"size":621,"mtime":1611612254436,"results":"61","hashOfConfig":"34"},{"size":217,"mtime":1611612254436,"results":"62","hashOfConfig":"34"},{"size":131,"mtime":1611612254436,"results":"63","hashOfConfig":"34"},{"size":598,"mtime":1611612254436,"results":"64","hashOfConfig":"34"},{"size":752,"mtime":1611612254436,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"n1sie1",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},"/app/src/index.js",[],["134","135"],"/app/src/config/yup.js",[],"/app/src/App/app.js",[],"/app/src/utils/index.js",["136"],"import validateCpf from \"./validators/cpf\";\n\nconst formatDate = (dateTime) => {\n  const [date, _] = dateTime.split(\"T\");\n  const [year, month, day] = date.split(\"-\");\n  return `${day}/${month}/${year}`;\n};\n\nexport { validateCpf, formatDate };\n","/app/src/routes/history.js",[],"/app/src/routes/index.js",[],"/app/src/context/index.js",[],"/app/src/utils/validators/cpf.js",[],"/app/src/routes/route.js",[],"/app/src/layouts/default.js",[],"/app/src/pages/Activity/index.js",["137","138","139","140"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { AppBar, Box, Container, Grid } from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport { FaFilter } from \"react-icons/fa\";\nimport { IoMdClose } from \"react-icons/io\";\n\nimport UIButton from \"components/UI/Button\";\nimport UIText from \"components/UI/Text\";\nimport TableActivity from \"components/Table\";\nimport NewPatient from \"components/Modals/NewPatient\";\nimport NewActivity from \"components/Modals/NewActivity\";\n\nimport { StyledTop, SectionFilter } from \"./style\";\nimport { StateContext } from \"context\";\nimport api from \"services/api\";\nimport Filters from \"components/Filters\";\n\nexport default function Activity() {\n  const {\n    actions: { setAlert },\n  } = useContext(StateContext);\n\n  const [newPatient, setNewPatient] = useState(false);\n  const [newActivity, setNewActivity] = useState(false);\n\n  const [skipGetActivities, setSkipGetActivities] = useState(0);\n  const [activities, setActivities] = useState([]);\n  const [activityParams, setActivityParams] = useState({});\n\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    (async function getActivities() {\n      try {\n        const { data } = await api.get(`activity`, {\n          params: {\n            ...activityParams,\n            skip: skipGetActivities,\n            limit: 5,\n          },\n        });\n\n        setActivities(data);\n        if (data.data.length === 0)\n          setAlert({\n            message:\n              \"Não foi possível encontrar dados para os filtros selecionados\",\n            severity: \"warning\",\n            show: true,\n          });\n      } catch (error) {\n        setAlert({\n          message: \"Não foi possível consultar os pacientes\",\n          severity: \"error\",\n          show: true,\n        });\n      }\n    })();\n  }, [activityParams, skipGetActivities, refresh]);\n\n  const handleNewPatient = () => {\n    setNewPatient(!newPatient);\n  };\n\n  const handleNewActivity = () => {\n    setNewActivity(!newActivity);\n  };\n\n  const editActivity = async (data) => {\n    try {\n      await api.patch(`activity/${data._id}`, data);\n\n      const newActivities = activities;\n      newActivities[\n        activities.data.findIndex(({ _id }) => _id === data._id)\n      ] = data;\n\n      setActivities(newActivities);\n      setRefresh(!refresh);\n    } catch (error) {\n      setAlert({\n        message: \"Não foi possível alterar o status da atividade\",\n        severity: \"error\",\n        show: true,\n      });\n    }\n  };\n\n  return (\n    <>\n      <StyledTop>\n        <Container>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs={12} md={6}>\n              <UIText>Lista de Atividades</UIText>\n              <UIText fontSize=\"12px\">Início {\">\"} Lista de Atividades</UIText>\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <UIButton onClick={handleNewPatient} fullWidth>\n                    Novo Paciente\n                  </UIButton>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <UIButton onClick={handleNewActivity} fullWidth>\n                    Nova Atividade\n                  </UIButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Container>\n      </StyledTop>\n      <SectionFilter>\n        <Container>\n          <Filters\n            params={activityParams}\n            submitFilter={(data) => setActivityParams(data)}\n          />\n        </Container>\n      </SectionFilter>\n      <Container>\n        <Box minHeight=\"400px\" display=\"flex\" pt={2}>\n          <TableActivity data={activities.data} editActivity={editActivity} />\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\" pb={5}>\n          <Pagination\n            color=\"primary\"\n            count={Math.ceil(activities.total / 5)}\n            onChange={(_, page) => setSkipGetActivities((page - 1) * 5)}\n            shape=\"rounded\"\n            size=\"small\"\n          />\n        </Box>\n      </Container>\n\n      {/* modals patient and activity */}\n      <NewPatient show={newPatient} onClose={() => handleNewPatient()} />\n      <NewActivity\n        show={newActivity}\n        onClose={() => handleNewActivity()}\n        refresh={() => setRefresh(!refresh)}\n      />\n    </>\n  );\n}\n","/app/src/pages/Activity/style.js",[],"/app/src/services/api.js",[],"/app/src/components/Table/index.js",[],"/app/src/components/Navbar/index.js",[],"/app/src/components/Snackbar/index.js",[],"/app/src/components/Filters/index.js",[],"/app/src/components/UI/Text/index.js",[],"/app/src/components/UI/Button/index.js",[],"/app/src/components/Modals/NewActivity/index.js",["141"],"/app/src/components/Modals/NewPatient/index.js",[],"/app/src/components/Modals/index.js",[],"/app/src/components/UI/Button/style.js",[],"/app/src/components/Modals/style.js",[],"/app/src/components/UI/TextField/index.js",[],"/app/src/components/UI/Select/index.js",[],"/app/src/components/UI/Text/style.js",[],"/app/src/components/Filters/style.js",[],"/app/src/components/Navbar/style.js",[],"/app/src/components/Table/style.js",[],"/app/src/components/UI/TextField/style.js",[],"/app/src/components/UI/Select/style.js",[],["142","143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":4,"column":16,"nodeType":"150","messageId":"151","endLine":4,"endColumn":17},{"ruleId":"148","severity":1,"message":"152","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":16},{"ruleId":"148","severity":1,"message":"153","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"148","severity":1,"message":"154","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":19},{"ruleId":"155","severity":1,"message":"156","line":59,"column":6,"nodeType":"157","endLine":59,"endColumn":50,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"156","line":90,"column":6,"nodeType":"157","endLine":90,"endColumn":12,"suggestions":"159"},{"ruleId":"144","replacedBy":"160"},{"ruleId":"146","replacedBy":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","'AppBar' is defined but never used.","'FaFilter' is defined but never used.","'IoMdClose' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAlert'. Either include it or remove the dependency array.","ArrayExpression",["164"],["165"],["162"],["163"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [activityParams, skipGetActivities, refresh, setAlert]",{"range":"170","text":"171"},"Update the dependencies array to be: [setAlert, show]",{"range":"172","text":"173"},[1832,1876],"[activityParams, skipGetActivities, refresh, setAlert]",[2241,2247],"[setAlert, show]"]