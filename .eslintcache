[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App/app.js":"3","/app/src/routes/history.js":"4","/app/src/routes/index.js":"5","/app/src/routes/route.js":"6","/app/src/layouts/default.js":"7","/app/src/components/Navbar/index.js":"8","/app/src/components/Navbar/style.js":"9","/app/src/pages/Activity/index.js":"10","/app/src/components/UI/Button/index.js":"11","/app/src/components/UI/Button/style.js":"12","/app/src/components/UI/Select/index.js":"13","/app/src/components/UI/Select/style.js":"14","/app/src/components/UI/Text/index.js":"15","/app/src/components/UI/Text/style.js":"16","/app/src/pages/Activity/style.js":"17","/app/src/components/UI/TextField/index.js":"18","/app/src/components/UI/TextField/style.js":"19","/app/src/components/Table/index.js":"20","/app/src/components/Table/style.js":"21","/app/src/components/Modals/index.js":"22","/app/src/components/Modals/style.js":"23","/app/src/components/Modals/NewPatient/index.js":"24","/app/src/components/Modals/NewActivity/index.js":"25","/app/src/config/yup.js":"26","/app/src/utils/index.js":"27","/app/src/utils/validators/cpf.js":"28","/app/src/services/api.js":"29","/app/src/components/Snackbar/index.js":"30","/app/src/context/index.js":"31","/app/src/theme-context.js":"32","/app/src/components/Filters/index.js":"33","/app/src/components/Filters/style.js":"34"},{"size":217,"mtime":1611508855826,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1611426885089,"results":"37","hashOfConfig":"36"},{"size":743,"mtime":1611608574603,"results":"38","hashOfConfig":"36"},{"size":114,"mtime":1611427763438,"results":"39","hashOfConfig":"36"},{"size":577,"mtime":1611583414165,"results":"40","hashOfConfig":"36"},{"size":494,"mtime":1611428837601,"results":"41","hashOfConfig":"36"},{"size":707,"mtime":1611590902771,"results":"42","hashOfConfig":"36"},{"size":938,"mtime":1611585202741,"results":"43","hashOfConfig":"36"},{"size":217,"mtime":1611501473669,"results":"44","hashOfConfig":"36"},{"size":4858,"mtime":1611610865170,"results":"45","hashOfConfig":"36"},{"size":293,"mtime":1611608554859,"results":"46","hashOfConfig":"36"},{"size":250,"mtime":1611585202833,"results":"47","hashOfConfig":"36"},{"size":928,"mtime":1611611607620,"results":"48","hashOfConfig":"36"},{"size":752,"mtime":1611609414461,"results":"49","hashOfConfig":"36"},{"size":180,"mtime":1611503767955,"results":"50","hashOfConfig":"36"},{"size":252,"mtime":1611585202829,"results":"51","hashOfConfig":"36"},{"size":321,"mtime":1611610124563,"results":"52","hashOfConfig":"36"},{"size":308,"mtime":1611595033435,"results":"53","hashOfConfig":"36"},{"size":598,"mtime":1611585203057,"results":"54","hashOfConfig":"36"},{"size":1991,"mtime":1611605323032,"results":"55","hashOfConfig":"36"},{"size":131,"mtime":1611605147047,"results":"56","hashOfConfig":"36"},{"size":728,"mtime":1611585202921,"results":"57","hashOfConfig":"36"},{"size":218,"mtime":1611496256621,"results":"58","hashOfConfig":"36"},{"size":2718,"mtime":1611597519577,"results":"59","hashOfConfig":"36"},{"size":4811,"mtime":1611606194603,"results":"60","hashOfConfig":"36"},{"size":218,"mtime":1611508190085,"results":"61","hashOfConfig":"36"},{"size":243,"mtime":1611603124921,"results":"62","hashOfConfig":"36"},{"size":997,"mtime":1611508198029,"results":"63","hashOfConfig":"36"},{"size":152,"mtime":1611427693540,"results":"64","hashOfConfig":"36"},{"size":406,"mtime":1611590809970,"results":"65","hashOfConfig":"36"},{"size":754,"mtime":1611590868502,"results":"66","hashOfConfig":"36"},{"size":125,"mtime":1611600601886,"results":"67","hashOfConfig":"36"},{"size":3980,"mtime":1611611625572,"results":"68","hashOfConfig":"36"},{"size":621,"mtime":1611609639602,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"n1sie1",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],["141","142"],"/app/src/reportWebVitals.js",[],["143","144"],"/app/src/App/app.js",[],"/app/src/routes/history.js",[],"/app/src/routes/index.js",[],"/app/src/routes/route.js",[],"/app/src/layouts/default.js",[],"/app/src/components/Navbar/index.js",[],"/app/src/components/Navbar/style.js",[],"/app/src/pages/Activity/index.js",["145","146","147","148"],"/app/src/components/UI/Button/index.js",[],"/app/src/components/UI/Button/style.js",[],"/app/src/components/UI/Select/index.js",[],"/app/src/components/UI/Select/style.js",[],"/app/src/components/UI/Text/index.js",[],"/app/src/components/UI/Text/style.js",[],"/app/src/pages/Activity/style.js",[],"/app/src/components/UI/TextField/index.js",[],"/app/src/components/UI/TextField/style.js",[],"/app/src/components/Table/index.js",[],"/app/src/components/Table/style.js",[],"/app/src/components/Modals/index.js",[],"/app/src/components/Modals/style.js",[],"/app/src/components/Modals/NewPatient/index.js",[],"/app/src/components/Modals/NewActivity/index.js",["149"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { matchSorter } from \"match-sorter\";\n\nimport UIButton from \"components/UI/Button\";\nimport UISelect from \"components/UI/Select\";\nimport UITextField from \"components/UI/TextField\";\nimport MainModal from \"..\";\n\nimport { StateContext } from \"context\";\nimport api from \"services/api\";\n\nconst validationSchema = yup.object().shape({\n  patient: yup.object().required(\"Selecione um paciente\").nullable(),\n  dueDate: yup.string().required(\"Selecione a date de vencimento\").nullable(),\n  status: yup.string().required(\"Selecione o status\"),\n  activity: yup.string().required(\"Digite a atividade\"),\n});\n\nexport default function NewActivity({ show, onClose }) {\n  const {\n    actions: { setAlert },\n  } = useContext(StateContext);\n\n  const [patients, setPatients] = useState([]);\n\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    setFieldValue,\n    resetForm,\n  } = useFormik({\n    initialValues: {\n      patient: \"\",\n      dueDate: \"\",\n      status: \"\",\n      activity: \"\",\n    },\n    validationSchema,\n    async onSubmit(data) {\n      try {\n        await api.post(`activity`, data);\n\n        setAlert({\n          message: \"Atividade criada com sucesso!\",\n          severity: \"success\",\n          show: true,\n        });\n\n        onClose();\n      } catch (error) {\n        setAlert({\n          message: \"Não foi possível criar a atividade\",\n          severity: \"error\",\n          show: true,\n        });\n      }\n    },\n  });\n\n  useEffect(() => {\n    if (!show) {\n      resetForm({ patient: \"\", dueDate: \"\", status: \"\", activity: \"\" });\n    }\n  }, [show, resetForm]);\n\n  useEffect(() => {\n    (async function getPatients() {\n      try {\n        const { data } = await api.get(`patient`);\n\n        setPatients(data);\n      } catch (error) {\n        setAlert({\n          message: \"Não foi possível consultar os pacientes\",\n          severity: \"error\",\n          show: true,\n        });\n      }\n    })();\n  }, []);\n\n  return (\n    <MainModal show={show} onClose={onClose} title=\"Nova Atividade\">\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSubmit();\n        }}\n      >\n        <Grid container spacing={2} justify=\"flex-end\">\n          <Grid item xs={12}>\n            <Autocomplete\n              size=\"small\"\n              options={patients}\n              getOptionLabel={(option) => option.name}\n              getOptionSelected={(option) => option === values.patient}\n              onChange={(_, value) => setFieldValue(\"patient\", value)}\n              filterOptions={(options, { inputValue }) =>\n                matchSorter(options, inputValue, { keys: [\"name\", \"cpf\"] })\n              }\n              renderInput={(params) => (\n                <UITextField\n                  {...params}\n                  placeholder=\"Busque o paciente por nome ou cpf\"\n                  label=\"Paciente\"\n                  error={touched.patient && errors.patient}\n                  onBlur={handleBlur(\"patient\")}\n                />\n              )}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <UITextField\n              fullWidth\n              label=\"Data de vencimento\"\n              type=\"date\"\n              value={values.dueDate}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              error={touched.dueDate && errors.dueDate}\n              onBlur={handleBlur(\"dueDate\")}\n              onChange={handleChange(\"dueDate\")}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <UISelect\n              fullWidth\n              label=\"Status\"\n              options={statusOptions}\n              error={touched.status && errors.status}\n              onBlur={handleBlur(\"status\")}\n              onChange={handleChange(\"status\")}\n              value={values.status}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <UITextField\n              fullWidth\n              label=\"Atividade\"\n              multiline\n              rows={3}\n              value={values.activity}\n              error={touched.activity && errors.activity}\n              onBlur={handleBlur(\"activity\")}\n              onChange={handleChange(\"activity\")}\n            />\n          </Grid>\n          <Grid item>\n            <UIButton type=\"submit\">Cadastrar</UIButton>\n          </Grid>\n        </Grid>\n      </form>\n    </MainModal>\n  );\n}\n\nconst statusOptions = [\n  { text: \"Aberto\", value: \"Aberto\" },\n  { text: \"Finalizado\", value: \"Finalizado\" },\n  { text: \"Atrasado\", value: \"Atrasado\" },\n];\n","/app/src/config/yup.js",[],"/app/src/utils/index.js",["150"],"/app/src/utils/validators/cpf.js",[],"/app/src/services/api.js",[],"/app/src/components/Snackbar/index.js",[],"/app/src/context/index.js",[],"/app/src/theme-context.js",[],"/app/src/components/Filters/index.js",[],"/app/src/components/Filters/style.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"151","replacedBy":"155"},{"ruleId":"153","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"161","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":18},{"ruleId":"157","severity":1,"message":"162","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":52,"column":6,"nodeType":"165","endLine":52,"endColumn":41,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"164","line":88,"column":6,"nodeType":"165","endLine":88,"endColumn":8,"suggestions":"167"},{"ruleId":"157","severity":1,"message":"168","line":4,"column":16,"nodeType":"159","messageId":"160","endLine":4,"endColumn":17},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],["169"],["170"],"no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'FaFilter' is defined but never used.","'IoMdClose' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAlert'. Either include it or remove the dependency array.","ArrayExpression",["171"],["172"],"'_' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [activityParams, setAlert, skipGetActivities]",{"range":"177","text":"178"},"Update the dependencies array to be: [setAlert]",{"range":"179","text":"180"},[1604,1639],"[activityParams, setAlert, skipGetActivities]",[2175,2177],"[setAlert]"]